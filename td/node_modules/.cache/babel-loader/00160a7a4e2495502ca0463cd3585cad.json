{"ast":null,"code":"import { NEW_GAME, USER_INPUT, LOSE_GAME } from '../actions/Actions';\nconst initialState = {\n  victory: []\n};\nexport default function reducer(state = initialState, action) {\n  let nextState;\n\n  switch (action.type) {\n    case NEW_GAME:\n      console.log(\"I am in new game\");\n      nextState = { ...state,\n        mysteryNumber: _getRandom(),\n        tour: 0\n      };\n      console.log(\" Mon nombre mystère \" + nextState.mysteryNumber);\n      return nextState;\n\n    case USER_INPUT:\n      let _result;\n\n      if (action.value > state.mysteryNumber) {\n        _result = \"sup\";\n      } else if (action.value < state.mysteryNumber) {\n        _result = \"inf\";\n      } else {\n        _result = \"equ\";\n      }\n\n      nextState = { ...state,\n        tour: state.tour + 1,\n        result: _result\n      };\n      return nextState;\n\n    case LOSE_GAME:\n      console.log(\"LOSE GAMMMMMMMMMME\");\n      nextState = { ...state,\n        mysteryNumber: _getRandom(),\n        tour: 0,\n        result: \"los\"\n      };\n      return nextState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["NEW_GAME","USER_INPUT","LOSE_GAME","initialState","victory","reducer","state","action","nextState","type","console","log","mysteryNumber","_getRandom","tour","_result","value","result"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,oBAAhD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;AAKA,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGH,YAA1B,EAAwCI,MAAxC,EAAgD;AAC3D,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKT,QAAL;AACIU,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERM,QAAAA,aAAa,EAAEC,UAAU,EAFjB;AAGRC,QAAAA,IAAI,EAAE;AAHE,OAAZ;AAKAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,yBAAuBH,SAAS,CAACI,aAA9C;AACA,aAAOJ,SAAP;;AACJ,SAAKP,UAAL;AAEI,UAAIc,OAAJ;;AACA,UAAIR,MAAM,CAACS,KAAP,GAAeV,KAAK,CAACM,aAAzB,EAAwC;AACpCG,QAAAA,OAAO,GAAG,KAAV;AACH,OAFD,MAGK,IAAIR,MAAM,CAACS,KAAP,GAAeV,KAAK,CAACM,aAAzB,EAAwC;AACzCG,QAAAA,OAAO,GAAG,KAAV;AACH,OAFI,MAGA;AACDA,QAAAA,OAAO,GAAG,KAAV;AACH;;AACDP,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERQ,QAAAA,IAAI,EAAER,KAAK,CAACQ,IAAN,GAAa,CAFX;AAGRG,QAAAA,MAAM,EAAEF;AAHA,OAAZ;AAKA,aAAOP,SAAP;;AAEJ,SAAKN,SAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERM,QAAAA,aAAa,EAAEC,UAAU,EAFjB;AAGRC,QAAAA,IAAI,EAAE,CAHE;AAIRG,QAAAA,MAAM,EAAE;AAJA,OAAZ;AAMA,aAAOT,SAAP;;AACJ;AACI,aAAOF,KAAP;AAvCR;AAyCH","sourcesContent":["import { NEW_GAME, USER_INPUT, LOSE_GAME } from '../actions/Actions';\n\nconst initialState = {\n    victory : []\n};\n\n\nexport default function reducer (state = initialState, action) {\n    let nextState;\n    switch (action.type) {\n        case NEW_GAME:\n            console.log(\"I am in new game\");\n            nextState = {\n                ...state,\n                mysteryNumber: _getRandom(),\n                tour: 0\n            };\n            console.log (\" Mon nombre mystère \"+nextState.mysteryNumber)\n            return nextState;\n        case USER_INPUT:\n            \n            let _result;\n            if (action.value > state.mysteryNumber) {\n                _result = \"sup\";\n            }\n            else if (action.value < state.mysteryNumber) {\n                _result = \"inf\";\n            }\n            else {\n                _result = \"equ\";\n            }\n            nextState = {\n                ...state,\n                tour: state.tour + 1,\n                result: _result\n            };\n            return nextState;\n            \n        case LOSE_GAME:\n            console.log(\"LOSE GAMMMMMMMMMME\");\n            nextState = {\n                ...state,\n                mysteryNumber: _getRandom(),\n                tour: 0,\n                result: \"los\"\n            };\n            return nextState;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}