{"ast":null,"code":"import { ADD_SCORE, EDIT_SCORE } from \"../actions/Actions\";\nconst initialState = {\n  victory: []\n};\n\nfunction sortVictory(a, b) {\n  return a.tour > b.tour ? 1 : a.tour < b.tour ? -1 : 0;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SCORE:\n      return { ...state,\n        victory: [...state.victory, action.value].sort(sortVictory)\n      };\n\n    case EDIT_SCORE:\n      let i = state.victory.length - 1;\n\n      if (state.victory[i].tour > action.value.tour) {\n        return { ...state,\n          victory: [...state.victory.filter((value, index) => index !== i), action.value].sort(sortVictory)\n        };\n      }\n\n    /*while (state.victory[i].tour > action.value.tour ) {\n        i--;\n    }\n    console.log(\"pos : \", i);\n    for (let j = state.victory.length - 2 ; j < i ; j--) {\n      state.victory[j + 1].userName      = state.victory[j].userName;\n      state.victory[j + 1].score         = state.victory[j].score;\n      state.victory[j + 1].mysteryNumber = state.victory[j].mysteryNumber;\n    }\n    state.victory[i] = action.value;\n    console.log(\"state modif: \", state);\n    return state;*/\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["ADD_SCORE","EDIT_SCORE","initialState","victory","sortVictory","a","b","tour","reducer","state","action","type","value","sort","i","length","filter","index"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;;AAIA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvB,SAAOD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsBF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAApD;AACH;;AAED,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGP,YAA1B,EAAwCQ,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,SAAL;AACI,aAAQ,EAAC,GAAGS,KAAJ;AAAYN,QAAAA,OAAO,EAAE,CAAC,GAAGM,KAAK,CAACN,OAAV,EAAoBO,MAAM,CAACE,KAA3B,EAAkCC,IAAlC,CAAuCT,WAAvC;AAArB,OAAR;;AACJ,SAAKH,UAAL;AACI,UAAIa,CAAC,GAAGL,KAAK,CAACN,OAAN,CAAcY,MAAd,GAAuB,CAA/B;;AACA,UAAIN,KAAK,CAACN,OAAN,CAAcW,CAAd,EAAiBP,IAAjB,GAAwBG,MAAM,CAACE,KAAP,CAAaL,IAAzC,EAA+C;AAC3C,eAAQ,EACJ,GAAGE,KADC;AAEJN,UAAAA,OAAO,EAAE,CAAC,GAAGM,KAAK,CAACN,OAAN,CAAca,MAAd,CAAsB,CAACJ,KAAD,EAAQK,KAAR,KAAkBA,KAAK,KAAKH,CAAlD,CAAJ,EAA0DJ,MAAM,CAACE,KAAjE,EAAwEC,IAAxE,CAA6ET,WAA7E;AAFL,SAAR;AAGH;;AACD;;;;;;;;;;;;;AAYJ;AACI,aAAOK,KAAP;AAvBR;AAyBH","sourcesContent":["import {ADD_SCORE, EDIT_SCORE} from \"../actions/Actions\"\n\nconst initialState = {\n    victory : []\n};\n\nfunction sortVictory(a, b) {\n    return a.tour > b.tour ? 1 : a.tour < b.tour ? -1 : 0;\n}\n\nexport default function reducer (state = initialState, action) {\n    switch (action.type) {\n        case ADD_SCORE :\n            return  {...state , victory: [...state.victory , action.value].sort(sortVictory) }\n        case EDIT_SCORE:\n            let i = state.victory.length - 1;\n            if (state.victory[i].tour > action.value.tour) {\n                return  {\n                    ...state , \n                    victory: [...state.victory.filter( (value, index) => index !== i), action.value].sort(sortVictory) }\n            }\n            /*while (state.victory[i].tour > action.value.tour ) {\n                i--;\n            }\n            console.log(\"pos : \", i);\n            for (let j = state.victory.length - 2 ; j < i ; j--) {\n              state.victory[j + 1].userName      = state.victory[j].userName;\n              state.victory[j + 1].score         = state.victory[j].score;\n              state.victory[j + 1].mysteryNumber = state.victory[j].mysteryNumber;\n            }\n            state.victory[i] = action.value;\n            console.log(\"state modif: \", state);\n            return state;*/\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}