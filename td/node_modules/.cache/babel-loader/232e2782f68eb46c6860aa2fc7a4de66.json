{"ast":null,"code":"import { ADD_SCORE, EDIT_SCORE } from \"../actions/Actions\";\nconst initialState = {\n  victory: []\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SCORE:\n      return { ...state,\n        victory: [...state.victory, action.value]\n      };\n\n    case EDIT_SCORE:\n      let i = state.victory.length - 1;\n\n      if (state.victory[i].tour < action.value.tour) {\n        // if the score mustn't be save\n        return state;\n      }\n\n      while (state.victory[i].tour > action.value.tour) {\n        i--;\n      }\n\n      console.log(\"pos : \", i);\n\n      for (let j = state.victory.length - 2; j < i; j--) {\n        state.victory[j + 1].userName = state.victory[j].userName;\n        state.victory[j + 1].score = state.victory[j].score;\n        state.victory[j + 1].mysteryNumber = state.victory[j].mysteryNumber;\n      }\n\n      state.victory[i] = action.value;\n      console.log(\"state modif: \", state);\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["ADD_SCORE","EDIT_SCORE","initialState","victory","reducer","state","action","type","value","i","length","tour","console","log","j","userName","score","mysteryNumber"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;AAIA,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGH,YAA1B,EAAwCI,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AACI,aAAQ,EAAC,GAAGK,KAAJ;AAAYF,QAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAoBG,MAAM,CAACE,KAA3B;AAArB,OAAR;;AACJ,SAAKP,UAAL;AACI,UAAIQ,CAAC,GAAGJ,KAAK,CAACF,OAAN,CAAcO,MAAd,GAAuB,CAA/B;;AACA,UAAIL,KAAK,CAACF,OAAN,CAAcM,CAAd,EAAiBE,IAAjB,GAAwBL,MAAM,CAACE,KAAP,CAAaG,IAAzC,EAA+C;AAC3C;AACA,eAAON,KAAP;AACH;;AACD,aAAOA,KAAK,CAACF,OAAN,CAAcM,CAAd,EAAiBE,IAAjB,GAAwBL,MAAM,CAACE,KAAP,CAAaG,IAA5C,EAAmD;AAC/CF,QAAAA,CAAC;AACJ;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,CAAtB;;AACA,WAAK,IAAIK,CAAC,GAAGT,KAAK,CAACF,OAAN,CAAcO,MAAd,GAAuB,CAApC,EAAwCI,CAAC,GAAGL,CAA5C,EAAgDK,CAAC,EAAjD,EAAqD;AACnDT,QAAAA,KAAK,CAACF,OAAN,CAAcW,CAAC,GAAG,CAAlB,EAAqBC,QAArB,GAAqCV,KAAK,CAACF,OAAN,CAAcW,CAAd,EAAiBC,QAAtD;AACAV,QAAAA,KAAK,CAACF,OAAN,CAAcW,CAAC,GAAG,CAAlB,EAAqBE,KAArB,GAAqCX,KAAK,CAACF,OAAN,CAAcW,CAAd,EAAiBE,KAAtD;AACAX,QAAAA,KAAK,CAACF,OAAN,CAAcW,CAAC,GAAG,CAAlB,EAAqBG,aAArB,GAAqCZ,KAAK,CAACF,OAAN,CAAcW,CAAd,EAAiBG,aAAtD;AACD;;AACDZ,MAAAA,KAAK,CAACF,OAAN,CAAcM,CAAd,IAAmBH,MAAM,CAACE,KAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,KAA7B;AACA,aAAOA,KAAP;;AACJ;AACI,aAAOA,KAAP;AAtBR;AAwBH","sourcesContent":["import {ADD_SCORE, EDIT_SCORE} from \"../actions/Actions\"\n\nconst initialState = {\n    victory : []\n};\n\nexport default function reducer (state = initialState, action) {\n    switch (action.type) {\n        case ADD_SCORE :\n            return  {...state , victory: [...state.victory , action.value]}\n        case EDIT_SCORE:\n            let i = state.victory.length - 1;\n            if (state.victory[i].tour < action.value.tour) {\n                // if the score mustn't be save\n                return state;\n            }\n            while (state.victory[i].tour > action.value.tour ) {\n                i--;\n            }\n            console.log(\"pos : \", i);\n            for (let j = state.victory.length - 2 ; j < i ; j--) {\n              state.victory[j + 1].userName      = state.victory[j].userName;\n              state.victory[j + 1].score         = state.victory[j].score;\n              state.victory[j + 1].mysteryNumber = state.victory[j].mysteryNumber;\n            }\n            state.victory[i] = action.value;\n            console.log(\"state modif: \", state);\n            return state;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}