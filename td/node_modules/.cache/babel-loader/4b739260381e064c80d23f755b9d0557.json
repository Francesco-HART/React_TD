{"ast":null,"code":"import { NEW_GAME, USER_INPUT, LOSE_GAME } from '../actions/Actions';\nconst initialState = {\n  mysteryNumber: null,\n  result: null,\n  tour: 0\n};\n\nfunction _getRandom() {\n  const MIN = 0;\n  const MAX = 101;\n  return Math.random() * (MAX - MIN) + MIN;\n}\n\nexport default function reducer(state = initialState, action) {\n  let nextState;\n\n  switch (action.type) {\n    case NEW_GAME:\n      nextState = { ...state,\n        mysteryNumber: _getRandom(),\n        tour: 0\n      };\n      return nextState;\n\n    case USER_INPUT:\n      let _result;\n\n      if (action.value > state.mysteryNumber) {\n        _result = \"sup\";\n      } else if (action.value < state.mysteryNumber) {\n        _result = \"inf\";\n      } else {\n        _result = \"equ\";\n      }\n\n      nextState = { ...state,\n        tour: state.tour + 1,\n        result: _result\n      };\n      return nextState;\n\n    case LOSE_GAME:\n      nextState = { ...state,\n        mysteryNumber: _getRandom(),\n        tour: 0,\n        result: \"los\"\n      };\n      return nextState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["NEW_GAME","USER_INPUT","LOSE_GAME","initialState","mysteryNumber","result","tour","_getRandom","MIN","MAX","Math","random","reducer","state","action","nextState","type","_result","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,oBAAhD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,IADE;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,SAASC,UAAT,GAAsB;AAClB,QAAMC,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,GAAZ;AACA,SAAQC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,CAAD,GAAgCA,GAAvC;AACH;;AAED,eAAe,SAASI,OAAT,CAAkBC,KAAK,GAAGV,YAA1B,EAAwCW,MAAxC,EAAgD;AAC3D,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKhB,QAAL;AACIe,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERT,QAAAA,aAAa,EAAEG,UAAU,EAFjB;AAGRD,QAAAA,IAAI,EAAE;AAHE,OAAZ;AAKA,aAAOS,SAAP;;AACJ,SAAKd,UAAL;AACI,UAAIgB,OAAJ;;AACA,UAAIH,MAAM,CAACI,KAAP,GAAeL,KAAK,CAACT,aAAzB,EAAwC;AACpCa,QAAAA,OAAO,GAAG,KAAV;AACH,OAFD,MAGK,IAAIH,MAAM,CAACI,KAAP,GAAeL,KAAK,CAACT,aAAzB,EAAwC;AACzCa,QAAAA,OAAO,GAAG,KAAV;AACH,OAFI,MAGA;AACDA,QAAAA,OAAO,GAAG,KAAV;AACH;;AACDF,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERP,QAAAA,IAAI,EAAEO,KAAK,CAACP,IAAN,GAAa,CAFX;AAGRD,QAAAA,MAAM,EAAEY;AAHA,OAAZ;AAKA,aAAOF,SAAP;;AAEJ,SAAKb,SAAL;AACIa,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERT,QAAAA,aAAa,EAAEG,UAAU,EAFjB;AAGRD,QAAAA,IAAI,EAAE,CAHE;AAIRD,QAAAA,MAAM,EAAE;AAJA,OAAZ;AAMA,aAAOU,SAAP;;AACJ;AACI,aAAOF,KAAP;AAnCR;AAqCH","sourcesContent":["import { NEW_GAME, USER_INPUT, LOSE_GAME } from '../actions/Actions';\n\nconst initialState = {\n    mysteryNumber: null,\n    result: null,\n    tour: 0\n};\n\nfunction _getRandom() {\n    const MIN = 0;\n    const MAX = 101;\n    return (Math.random() * (MAX - MIN)) + MIN;\n}\n\nexport default function reducer (state = initialState, action) {\n    let nextState;\n    switch (action.type) {\n        case NEW_GAME:\n            nextState = {\n                ...state,\n                mysteryNumber: _getRandom(),\n                tour: 0\n            };\n            return nextState;\n        case USER_INPUT:\n            let _result;\n            if (action.value > state.mysteryNumber) {\n                _result = \"sup\";\n            }\n            else if (action.value < state.mysteryNumber) {\n                _result = \"inf\";\n            }\n            else {\n                _result = \"equ\";\n            }\n            nextState = {\n                ...state,\n                tour: state.tour + 1,\n                result: _result\n            };\n            return nextState;\n            \n        case LOSE_GAME:\n            nextState = {\n                ...state,\n                mysteryNumber: _getRandom(),\n                tour: 0,\n                result: \"los\"\n            };\n            return nextState;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}