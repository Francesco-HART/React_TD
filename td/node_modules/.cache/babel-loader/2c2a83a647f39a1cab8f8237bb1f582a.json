{"ast":null,"code":"var _jsxFileName = \"/Users/RomanCLV/Documents/GitHub/React/td2/src/components/Formulaire.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { userInput, newGame, loseGame } from '../actions/Actions';\n\nclass Formulaire extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mysteryNumber: null,\n      userNumber: null,\n      tour: 0,\n      result: null,\n      play: false\n    };\n  }\n\n  handleRestart(e) {\n    e.preventDefault();\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n\n    let _result;\n\n    if (userNumber > this.mysteryNumber) {\n      _result = \"sup\";\n    } else if (userNumber < this.mysteryNumber) {\n      _result = \"inf\";\n    } else {\n      _result = \"equ\";\n    }\n\n    this.setState({ ...state,\n      tour: state.tour + 1,\n      result: _result\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      userNumber: e.target.value\n    });\n  }\n\n  startGame(e) {\n    e.preventDefault();\n  }\n\n  displayResult() {\n    switch (this.state.result) {\n      case \"sup\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"C'est plus petit !\");\n\n      case \"inf\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"C'est plus grand !\");\n\n      case \"equ\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"C'est gagn\\xE9 biloute !\");\n\n      case \"los\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"C'est perdu l'italien !\");\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"El Muchachos !\");\n    }\n  }\n\n  timeToPlay() {\n    if (!this.state.play) {\n      this.setState({\n        mysteryNumber: this._getRandom(),\n        play: true\n      });\n    }\n  }\n\n  _getRandom() {\n    const MIN = 0;\n    const MAX = 101;\n    const number = Math.trunc(Math.random() * (MAX - MIN) + MIN);\n    console.log(number);\n    return number;\n  }\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.timeToPlay(), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.mysteryNumber == null ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Init Game\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Entrez un nombre entre 0 et 100 compris : \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      onChange: e => this.handleChange(e),\n      disabled: this.state.play,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.handleSend(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Send\"), React.createElement(\"button\", {\n      onClick: e => this.handleRestart(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Restart\"))), this.displayResult());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nexport default connect(mapStateToProps)(Formulaire);","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/components/Formulaire.js"],"names":["React","connect","userInput","newGame","loseGame","Formulaire","Component","constructor","state","mysteryNumber","userNumber","tour","result","play","handleRestart","e","preventDefault","handleSend","_result","setState","handleChange","target","value","startGame","displayResult","timeToPlay","_getRandom","MIN","MAX","number","Math","trunc","random","console","log","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { userInput, newGame, loseGame } from '../actions/Actions';\n\nclass Formulaire extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            mysteryNumber : null,\n            userNumber : null,\n            tour: 0,\n            result: null,\n            play : false\n        }\n    }\n    \n\n    handleRestart(e) {\n        e.preventDefault()\n    }\n\n    handleSend(e) {\n        e.preventDefault()\n        let _result;\n            if (userNumber > this.mysteryNumber) {\n                _result = \"sup\";\n            }\n            else if ( userNumber < this.mysteryNumber) {\n                _result = \"inf\";\n            }\n            else {\n                _result = \"equ\";\n            }\n            this.setState ( {\n                ...state,\n                tour: state.tour + 1,\n                result: _result\n            });\n    }\n\n    handleChange(e) {\n       this.setState({ userNumber : e.target.value })     \n    }\n\n    startGame(e) {\n        e.preventDefault()\n    }\n\n    displayResult() {\n        switch (this.state.result) {\n            case \"sup\":\n                return <p>C'est plus petit !</p>;\n            case \"inf\":\n                return <p>C'est plus grand !</p>;\n            case \"equ\":\n                return <p>C'est gagnÃ© biloute !</p>\n            case \"los\":\n                return <p>C'est perdu l'italien !</p>\n            default:\n                return <p>El Muchachos !</p>\n        }\n    }\n\n    timeToPlay() {\n        if(!this.state.play){\n            this.setState({mysteryNumber : this._getRandom(), play : true});\n        }\n    }\n\n    _getRandom() {\n        const MIN = 0;\n        const MAX = 101;\n        const number = Math.trunc((Math.random() * (MAX - MIN)) + MIN)\n        console.log (number)\n        return number\n    }\n\n    render(){\n      console.log(\"render\")\n        return(\n            <div>\n                { this.timeToPlay() }\n                <form>\n                    { this.state.mysteryNumber == null ?  <p>Init Game</p> : <p>Entrez un nombre entre 0 et 100 compris : </p> }\n                    <label>\n                        <input type=\"number\" onChange={ (e) => this.handleChange(e) } disabled={this.state.play}/>\n                        <button onClick={ (e) => this.handleSend(e) }>Send</button>\n                        <button onClick={ (e) => this.handleRestart(e) }>Restart</button>\n                    </label>\n                </form>\n                { this.displayResult() }\n            </div>\n        );\n    }\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n      state\n    };\n  }\n  export default connect(mapStateToProps)(Formulaire);"]},"metadata":{},"sourceType":"module"}