{"ast":null,"code":"import { ADD_SCORE, EDIT_SCORE } from \"../actions/Actions\";\nconst initialState = {\n  victory: []\n};\n\nfunction sortVictory(a, b) {\n  if (a.tour === -1) {\n    return 1;\n  }\n\n  if (b.tour === -1) {\n    return -1;\n  }\n\n  return a.tour >= b.tour ? 1 : -1;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SCORE:\n      const nextState = { ...state,\n        victory: [...state.victory, action.value].sort(state.Victory)\n      };\n      return nextState;\n\n    case EDIT_SCORE:\n      let i = state.victory.length - 1;\n\n      if (state.victory[i].tour > action.value.tour || state.victory[i].tour === -1) {\n        return { ...state,\n          victory: [...state.victory.filter((value, index) => index !== i), action.value].sort(sortVictory)\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["ADD_SCORE","EDIT_SCORE","initialState","victory","sortVictory","a","b","tour","reducer","state","action","type","nextState","value","sort","Victory","i","length","filter","index"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;;AAIA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvB,MAAID,CAAC,CAACE,IAAF,KAAW,CAAC,CAAhB,EAAmB;AACf,WAAO,CAAP;AACH;;AACD,MAAID,CAAC,CAACC,IAAF,KAAW,CAAC,CAAhB,EAAmB;AACf,WAAO,CAAC,CAAR;AACH;;AACD,SAAOF,CAAC,CAACE,IAAF,IAAUD,CAAC,CAACC,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAA/B;AACH;;AAED,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGP,YAA1B,EAAwCQ,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,SAAL;AACI,YAAMY,SAAS,GAAG,EAAC,GAAGH,KAAJ;AAAWN,QAAAA,OAAO,EAAE,CAAC,GAAGM,KAAK,CAACN,OAAV,EAAoBO,MAAM,CAACG,KAA3B,EAAkCC,IAAlC,CAAuCL,KAAK,CAACM,OAA7C;AAApB,OAAlB;AAEA,aAAQH,SAAR;;AACJ,SAAKX,UAAL;AACI,UAAIe,CAAC,GAAGP,KAAK,CAACN,OAAN,CAAcc,MAAd,GAAuB,CAA/B;;AACA,UAAIR,KAAK,CAACN,OAAN,CAAca,CAAd,EAAiBT,IAAjB,GAAwBG,MAAM,CAACG,KAAP,CAAaN,IAArC,IAA6CE,KAAK,CAACN,OAAN,CAAca,CAAd,EAAiBT,IAAjB,KAA0B,CAAC,CAA5E,EAA+E;AAC3E,eAAO,EACH,GAAGE,KADA;AAEHN,UAAAA,OAAO,EAAE,CAAC,GAAGM,KAAK,CAACN,OAAN,CAAce,MAAd,CAAsB,CAACL,KAAD,EAAQM,KAAR,KAAkBA,KAAK,KAAKH,CAAlD,CAAJ,EAA0DN,MAAM,CAACG,KAAjE,EAAwEC,IAAxE,CAA6EV,WAA7E;AAFN,SAAP;AAIH;;AACD,aAAOK,KAAP;;AACJ;AACI,aAAOA,KAAP;AAfR;AAiBH","sourcesContent":["import {ADD_SCORE, EDIT_SCORE} from \"../actions/Actions\"\n\nconst initialState = {\n    victory : []\n};\n\nfunction sortVictory(a, b) {\n    if (a.tour === -1) {\n        return 1;\n    }\n    if (b.tour === -1) {\n        return -1;\n    }\n    return a.tour >= b.tour ? 1 : -1;\n}\n\nexport default function reducer (state = initialState, action) {\n    switch (action.type) {\n        case ADD_SCORE :\n            const nextState = {...state, victory: [...state.victory , action.value].sort(state.Victory) };\n\n            return  nextState;\n        case EDIT_SCORE:\n            let i = state.victory.length - 1;\n            if (state.victory[i].tour > action.value.tour || state.victory[i].tour === -1) {\n                return {\n                    ...state, \n                    victory: [...state.victory.filter( (value, index) => index !== i), action.value].sort(sortVictory) \n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}