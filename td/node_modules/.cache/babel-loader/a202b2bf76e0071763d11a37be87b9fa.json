{"ast":null,"code":"import { ADD_SCORE, EDIT_SCORE } from \"../actions/Actions\";\nconst initialState = {\n  victory: []\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SCORE:\n      return { ...state,\n        victory: [...state.victory, action.value]\n      };\n\n    case EDIT_SCORE:\n      let i = 5;\n\n      while (state.victory[i] < action.value.tour) {\n        i--;\n      }\n\n      for (let j = 3; j < i; j--) {\n        state.victory[j + 1] = state.victory[j];\n      }\n\n      state.victory[i] = action.value;\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["ADD_SCORE","EDIT_SCORE","initialState","victory","reducer","state","action","type","value","i","tour","j"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;AAIA,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGH,YAA1B,EAAwCI,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AACI,aAAQ,EAAC,GAAGK,KAAJ;AAAYF,QAAAA,OAAO,EAAG,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAoBG,MAAM,CAACE,KAA3B;AAAtB,OAAR;;AACJ,SAAKP,UAAL;AACI,UAAIQ,CAAC,GAAG,CAAR;;AACA,aAAQJ,KAAK,CAACF,OAAN,CAAcM,CAAd,IAAmBH,MAAM,CAACE,KAAP,CAAaE,IAAxC,EAA+C;AAC3CD,QAAAA,CAAC;AACJ;;AACD,WAAK,IAAIE,CAAC,GAAI,CAAd,EAAkBA,CAAC,GAAGF,CAAtB,EAA0BE,CAAC,EAA3B,EAA8B;AAC5BN,QAAAA,KAAK,CAACF,OAAN,CAAcQ,CAAC,GAAG,CAAlB,IAAuBN,KAAK,CAACF,OAAN,CAAcQ,CAAd,CAAvB;AACD;;AACDN,MAAAA,KAAK,CAACF,OAAN,CAAcM,CAAd,IAAmBH,MAAM,CAACE,KAA1B;AAEA,aAAOH,KAAP;;AACJ;AACI,aAAOA,KAAP;AAfR;AAiBH","sourcesContent":["import {ADD_SCORE, EDIT_SCORE} from \"../actions/Actions\"\n\nconst initialState = {\n    victory : []\n};\n\nexport default function reducer (state = initialState, action) {\n    switch (action.type) {\n        case ADD_SCORE :\n            return  {...state , victory : [...state.victory , action.value]}\n        case EDIT_SCORE:\n            let i = 5;\n            while ( state.victory[i] < action.value.tour ) {\n                i--;\n            }\n            for( let j  = 3 ; j < i ; j--){\n              state.victory[j + 1] = state.victory[j];  \n            }\n            state.victory[i] = action.value\n\n            return state;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}