{"ast":null,"code":"import { ADD_SCORE, EDIT_SCORE } from \"../actions/Actions\";\nconst initialState = {\n  victory: []\n};\n\nfunction sortVictory(a, b) {\n  //return a.tour > b.tour ? 1 : a.tour < b.tour ? -1 : 0;\n  console.log(\" compare : a = \", a.tour, \" b = \", b.tour);\n\n  if (a.tour === -1 || b.tour === -1) {\n    console.log(\"return tour == -1\");\n    return -1;\n  }\n\n  console.log(\"return tour == \", a.tour >= b.tour ? 1 : -1);\n  return a.tour >= b.tour ? 1 : -1;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SCORE:\n      return { ...state,\n        victory: [...state.victory, action.value].sort(sortVictory)\n      };\n\n    case EDIT_SCORE:\n      let i = state.victory.length - 1;\n\n      if (state.victory[i].tour > action.value.tour) {\n        return { ...state,\n          victory: [...state.victory.filter((value, index) => index !== i), action.value].sort(sortVictory)\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/RomanCLV/Documents/GitHub/React/td2/src/reducers/Reducer.js"],"names":["ADD_SCORE","EDIT_SCORE","initialState","victory","sortVictory","a","b","console","log","tour","reducer","state","action","type","value","sort","i","length","filter","index"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG;AADO,CAArB;;AAIA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,CAAC,CAACI,IAAjC,EAAuC,OAAvC,EAAgDH,CAAC,CAACG,IAAlD;;AACA,MAAIJ,CAAC,CAACI,IAAF,KAAW,CAAC,CAAZ,IAAiBH,CAAC,CAACG,IAAF,KAAW,CAAC,CAAjC,EAAoC;AAChCF,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAb;AACA,WAAO,CAAC,CAAR;AACH;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAb,EAAgCH,CAAC,CAACI,IAAF,IAAUH,CAAC,CAACG,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAAxD;AAEA,SAAOJ,CAAC,CAACI,IAAF,IAAUH,CAAC,CAACG,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAA/B;AACH;;AAED,eAAe,SAASC,OAAT,CAAkBC,KAAK,GAAGT,YAA1B,EAAwCU,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,SAAL;AACI,aAAQ,EAAC,GAAGW,KAAJ;AAAYR,QAAAA,OAAO,EAAE,CAAC,GAAGQ,KAAK,CAACR,OAAV,EAAoBS,MAAM,CAACE,KAA3B,EAAkCC,IAAlC,CAAuCX,WAAvC;AAArB,OAAR;;AACJ,SAAKH,UAAL;AACI,UAAIe,CAAC,GAAGL,KAAK,CAACR,OAAN,CAAcc,MAAd,GAAuB,CAA/B;;AACA,UAAIN,KAAK,CAACR,OAAN,CAAca,CAAd,EAAiBP,IAAjB,GAAwBG,MAAM,CAACE,KAAP,CAAaL,IAAzC,EAA+C;AAC3C,eAAO,EACH,GAAGE,KADA;AAEHR,UAAAA,OAAO,EAAE,CAAC,GAAGQ,KAAK,CAACR,OAAN,CAAce,MAAd,CAAsB,CAACJ,KAAD,EAAQK,KAAR,KAAkBA,KAAK,KAAKH,CAAlD,CAAJ,EAA0DJ,MAAM,CAACE,KAAjE,EAAwEC,IAAxE,CAA6EX,WAA7E;AAFN,SAAP;AAIH;;AACD,aAAOO,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH","sourcesContent":["import {ADD_SCORE, EDIT_SCORE} from \"../actions/Actions\"\n\nconst initialState = {\n    victory : []\n};\n\nfunction sortVictory(a, b) {\n    //return a.tour > b.tour ? 1 : a.tour < b.tour ? -1 : 0;\n\n    console.log(\" compare : a = \", a.tour, \" b = \", b.tour);\n    if (a.tour === -1 || b.tour === -1) {\n        console.log (\"return tour == -1\")\n        return -1;\n    }\n    console.log (\"return tour == \", a.tour >= b.tour ? 1 : -1)\n\n    return a.tour >= b.tour ? 1 : -1;\n}\n\nexport default function reducer (state = initialState, action) {\n    switch (action.type) {\n        case ADD_SCORE :\n            return  {...state , victory: [...state.victory , action.value].sort(sortVictory) };\n        case EDIT_SCORE:\n            let i = state.victory.length - 1;\n            if (state.victory[i].tour > action.value.tour) {\n                return {\n                    ...state, \n                    victory: [...state.victory.filter( (value, index) => index !== i), action.value].sort(sortVictory) \n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}